<Window x:Name="WindowMain" x:Class="HrtzAudioMixer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:properties="clr-namespace:HrtzAudioMixer.Properties"
        xmlns:converters="clr-namespace:HrtzAudioMixer.Converters"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="MainWindow" MinWidth="400" MaxWidth="400" Width="400"
        Top="{Binding Source={x:Static properties:Settings.Default}, Path=UiWindowPosTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=100}"
        Left="{Binding Source={x:Static properties:Settings.Default}, Path=UiWindowPosLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=100}"
        Topmost="{Binding Source={x:Static properties:Settings.Default}, Path=UiWindowTopMost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        Style="{StaticResource StyleMainWindow}"
        Closing="MainWindow_OnClosing">
    
    <Window.Resources>
        <converters:HeightConverter x:Key="HeightConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" IsHidden="False" TriggerValue="True" />
        <system:Double x:Key="WindowCombinedMarginValues">65</system:Double>
    </Window.Resources>

    <Window.MinHeight>
        <MultiBinding Converter="{StaticResource HeightConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
            <Binding ElementName="ItemsControlActiveApps" Path="ActualHeight" />
            <Binding ElementName="StackPanelMasterDevice" Path="ActualHeight" />
            <Binding Source="{StaticResource WindowCombinedMarginValues}" />
        </MultiBinding>
    </Window.MinHeight>

    <Window.MaxHeight>
        <MultiBinding Converter="{StaticResource HeightConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
            <Binding ElementName="ItemsControlActiveApps" Path="ActualHeight" />
            <Binding ElementName="StackPanelMasterDevice" Path="ActualHeight" />
            <Binding Source="{StaticResource WindowCombinedMarginValues}" />
        </MultiBinding>
    </Window.MaxHeight>

    <Grid x:Name="GridRoot" Margin="20">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Main device -->
        <StackPanel x:Name="StackPanelMasterDevice">
            <TextBlock Text="{Binding Source={StaticResource MasterDeviceViewModel}, Path=MasterDeviceName, TargetNullValue=DeviceName}" TextWrapping="Wrap" Foreground="#FFD4D4D4" Margin="0,0,0,8" />
            <Grid>
                <ProgressBar Value="{Binding Source={StaticResource MasterDeviceViewModel}, Path=MasterAudioPeak}" Background="Transparent" BorderThickness="0" Maximum="100" Minimum="0" Height="1.5" Foreground="#FFBB872B"></ProgressBar>
                <Slider Style="{StaticResource StyleVolumeSliderHorizontal}" Value="{Binding Source={StaticResource MasterDeviceViewModel}, Path=MasterAudioLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Maximum="1" Minimum="0" LargeChange="0.1" />
            </Grid>

            <Grid Margin="0,5,0,15">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Mute -->
                <ToggleButton IsChecked="{Binding Source={StaticResource MasterDeviceViewModel}, Path=MasterAudioIsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding Source={StaticResource MasterDeviceViewModel}, Path=CommandSetMasterAudioVolume}"
                                                           CommandParameter="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding Source={StaticResource MasterDeviceViewModel}, Path=CommandSetMasterAudioVolume}"
                                                           CommandParameter="False" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Foreground" Value="#FF979797" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid Margin="10,0,0,6" Background="Transparent">
                                            <Viewbox Width="11" Height="11" VerticalAlignment="Center">
                                                <Path x:Name="PathRoot" Stretch="UniformToFill">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}">
                                                            <Setter Property="Data" Value="{StaticResource IconVolumeOn}" />
                                                            <Setter Property="Fill" Value="#FF979797" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Source={StaticResource MasterDeviceViewModel}, Path=MasterAudioIsMuted}" Value="True">
                                                                    <Setter Property="Data" Value="{StaticResource IconVolumeOff}" />
                                                                    <Setter Property="Fill" Value="#FFB94343" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Viewbox>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="PathRoot" Property="Fill" Value="#FFFFFFFF" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <TextBlock Grid.Column="1" Text="{Binding Source={StaticResource MasterDeviceViewModel}, Path=MasterAudioLevel, StringFormat=P1}" Foreground="#FFA0A0A0" HorizontalAlignment="Right" />
            </Grid>

            <TextBlock Text="No active audio sessions..." Foreground="#FF83431D" HorizontalAlignment="Center" Visibility="{Binding Source={StaticResource ActiveAppsViewModel}, Path=ActiveAppsCollection.Count, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>

        <StackPanel Grid.Row="1">
            <ItemsControl x:Name="ItemsControlActiveApps" DataContext="{Binding Source={StaticResource ActiveAppsViewModel}}" ItemsSource="{Binding Path=ActiveAppsCollection}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>

                        <Grid x:Name="GridRoot" Margin="0,0,0,1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Name -->
                            <Grid Grid.Row="0" Grid.Column="0" Background="#FF272727">
                                <TextBlock Text="{Binding Path=MainWindowTitle}" Foreground="#FFAEAEAE" TextWrapping="Wrap" Margin="10,5,10,5" />
                            </Grid>

                            <!-- Slider -->
                            <Grid Grid.Row="1" Grid.Column="0" Background="#FF272727">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <ToggleButton IsChecked="{Binding Path=IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding Source={StaticResource ActiveAppsViewModel}, Path=CommandSetAudioSessionVolume}"
                                                           CommandParameter="{Binding ElementName=GridRoot, Path=DataContext}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Unchecked">
                                                <i:InvokeCommandAction Command="{Binding Source={StaticResource ActiveAppsViewModel}, Path=CommandSetAudioSessionVolume}"
                                                           CommandParameter="{Binding ElementName=GridRoot, Path=DataContext}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Foreground" Value="#FF979797" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid Margin="10,0,0,6" Background="Transparent">
                                                                <Viewbox Width="11" Height="11" VerticalAlignment="Center">
                                                                    <Path x:Name="PathRoot" Stretch="UniformToFill">
                                                                        <Path.Style>
                                                                            <Style TargetType="{x:Type Path}">
                                                                                <Setter Property="Data" Value="{StaticResource IconVolumeOn}" />
                                                                                <Setter Property="Fill" Value="#FF979797" />
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding Path=IsMuted}" Value="True">
                                                                                        <Setter Property="Data" Value="{StaticResource IconVolumeOff}" />
                                                                                        <Setter Property="Fill" Value="#FFB94343" />
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Path.Style>
                                                                    </Path>
                                                                </Viewbox>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="PathRoot" Property="Fill" Value="#FFFFFFFF" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <Slider x:Name="PART_Slider" Style="{StaticResource StyleVolumeSliderHorizontal}" Grid.Column="1" Value="{Binding Path=VolumeLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Maximum="1" Minimum="0" Margin="10,5,15,10" LargeChange="0.1">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="ValueChanged">
                                                <i:InvokeCommandAction Command="{Binding Source={StaticResource ActiveAppsViewModel}, Path=CommandSetAudioSessionVolume}"
                                                           CommandParameter="{Binding ElementName=GridRoot, Path=DataContext}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Slider>
                                </Grid>
                            </Grid>

                            <!-- Icon -->
                            <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Background="#FF191919" HorizontalAlignment="Center">
                                <Viewbox Width="32" Height="32" Margin="10">
                                    <Path Fill="#FF83431D" Stretch="UniformToFill">
                                        <Path.Style>
                                            <Style TargetType="{x:Type Path}">
                                                <Setter Property="Data" Value="{StaticResource IconUnknown}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=ProcessName, Converter={StaticResource StringContainsToBooleanConverter}, ConverterParameter=spotify}" Value="True">
                                                        <Setter Property="Data" Value="{StaticResource IconSpotify}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=ProcessName, Converter={StaticResource StringContainsToBooleanConverter}, ConverterParameter=chrome}" Value="True">
                                                        <Setter Property="Data" Value="{StaticResource IconChrome}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=ProcessName, Converter={StaticResource StringContainsToBooleanConverter}, ConverterParameter=steam}" Value="True">
                                                        <Setter Property="Data" Value="{StaticResource IconSteam}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=ProcessName, Converter={StaticResource StringContainsToBooleanConverter}, ConverterParameter=mumble}" Value="True">
                                                        <Setter Property="Data" Value="{StaticResource IconVoice}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=ProcessName, Converter={StaticResource StringContainsToBooleanConverter}, ConverterParameter=cigPatcher}" Value="True">
                                                        <Setter Property="Data" Value="{StaticResource IconGame}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=ProcessName, Converter={StaticResource StringContainsToBooleanConverter}, ConverterParameter=rust}" Value="True">
                                                        <Setter Property="Data" Value="{StaticResource IconGame}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=ProcessName, Converter={StaticResource StringContainsToBooleanConverter}, ConverterParameter=minecraft}" Value="True">
                                                        <Setter Property="Data" Value="{StaticResource IconGame}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </Viewbox>
                            </Grid>

                        </Grid>

                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <tb:TaskbarIcon x:Name="NotifyIcon" Grid.Row="0"
                    Visibility="Visible"
                    ToolTipText="Hrtz Audio Mixer"
                    IconSource="bargraph.ico"
      />

    </Grid>

</Window>
